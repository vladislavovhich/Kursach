@using Lab_5.ViewModels.Employees
@using Lab_5.ViewModels
@using Lab_5.Models
@model PaginationViewModel<EmpFailedViewModel, EmployeesFilterViewModel, EmployeeSortViewModel>

@addTagHelper *, Lab_5

@{
    ViewData["Title"] = "Невыполненные задания";
}

<h1>Невыполненные задания</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(item => item.Items.First().Employee)
            </th>
            <th>
                @Html.DisplayNameFor(item => item.Items.First().Task)
            </th>
            <th>
                @Html.DisplayNameFor(item => item.Items.First().Project)
            </th>
            <th>
                @Html.DisplayNameFor(item => item.Items.First().Delayed)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    <a asp-controller="Employees" asp-action="Details" asp-route-id="@item.Employee.EmployeeId">
                        @Html.DisplayFor(modelItem => item.Employee.FullName)
                    </a>
                </td>
                <td>
                    <a asp-controller="Tasks" asp-action="Details" asp-route-id="@item.Task.TaskId">
                        @Html.DisplayFor(modelItem => item.Task.TaskId)
                    </a>
                </td>
                <td>
                    <a asp-controller="Projects" asp-action="Details" asp-route-id="@item.Project.ProjectId">
                        @Html.DisplayFor(modelItem => item.Project.ProjectName)
                    </a>
                </td>
                <td>
                    
                    @Html.DisplayFor(modelItem => item.Delayed)

                    @if (item.Delayed.ToString().Count() == 1 && item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '1')
                    {
                        <span>день</span>
                    }
                    else if (item.Delayed.ToString().Count() >= 2 && item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '1')
                    {
                        <span>день</span>
                    }

                    else if (item.Delayed.ToString().Length == 2 && item.Delayed.ToString()[item.Delayed.ToString().Count() - 2] == '1' &&
                   (item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '2' ||
                   item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '3' ||
                   item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '4'))
                    {
                        <span>дней</span>
                    }
                    else if (item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '2' ||
                         item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '3' ||
                         item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '4')
                    {
                        <span>дня</span>
                    }

                    else if (
                         item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '5' ||
                         item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '6' ||
                         item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '7' ||
                         item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '8' ||
                         item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '9' ||
                         item.Delayed.ToString()[item.Delayed.ToString().Count() - 1] == '0')
                    {
                        <span>дней</span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<page-link page-model="Model.PageViewModel"
           page-action="EmployeesFailed"></page-link>